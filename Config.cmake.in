@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/EPHistTargets.cmake")

set(EPHist_FOUND TRUE)

foreach(comp ${EPHist_FIND_COMPONENTS})
  if(comp STREQUAL "Util")
    # If the target EPHistUtil exists, we declare the Util component found.
    if(TARGET EPHist::EPHistUtil)
      set(EPHist_Util_FOUND TRUE)
    elseif(EPHist_FIND_REQUIRED_Util)
      set(EPHist_FOUND FALSE)
      set(EPHist_NOT_FOUND_MESSAGE "EPHistUtil library not installed")
    endif()
  elseif(comp STREQUAL "UtilROOT")
    # If the target EPHistUtilROOT exists and we find the ROOT dependency, we
    # declare the UtilROOT component found.
    if(TARGET EPHist::EPHistUtilROOT)
      find_package(ROOT QUIET COMPONENTS Hist ROOTDataFrame)
      if(ROOT_FOUND)
        set(EPHist_UtilROOT_FOUND TRUE)
      elseif(EPHist_FIND_REQUIRED_UtilROOT)
        # Call find_package again with the REQUIRED keyword to print an error.
        find_package(ROOT REQUIRED COMPONENTS Hist ROOTDataFrame)
        set(EPHist_FOUND FALSE)
        set(EPHist_NOT_FOUND_MESSAGE "ROOT dependency of EPHistUtilROOT not found")
      endif()
    elseif(EPHist_FIND_REQUIRED_UtilROOT)
      set(EPHist_FOUND FALSE)
      set(EPHist_NOT_FOUND_MESSAGE "EPHistUtilROOT library not installed")
    endif()
  else()
    # Unsupported component (in this version of EPHist); only error if required.
    if(EPHist_FIND_REQUIRED_${comp})
      set(EPHist_FOUND FALSE)
      set(EPHist_NOT_FOUND_MESSAGE "Unsupported component: ${comp}")
    endif()
  endif()

  if(NOT EPHist_FOUND)
    return()
  endif()
endforeach()
